version: 2.1
jobs:
  docker-build:
    resource_class: small
    working_directory: /home/circleci/zync
    docker:
      - image: cimg/base:current
        environment:
          POSTGRES_CONTAINER_NAME: db
          DATABASE_URL: postgresql://postgres:postgres@db:5432/zync
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: zync
          RAILS_ENV: production
    steps:
      - checkout
      - setup_remote_docker
      - run: docker build --tag zync:build --file ./Dockerfile .
      - run: docker network create net0
      - run: docker run --net net0 --name ${POSTGRES_CONTAINER_NAME} -d -p 5432:5432 -e POSTGRES_USER=${POSTGRES_USER} -e POSTGRES_PASSWORD=${POSTGRES_PASSWORD} -e POSTGRES_DB=${POSTGRES_DB} postgres:14-alpine
      - run:
          command: |
            docker run --net net0 -e RAILS_ENV=${RAILS_ENV} -e DATABASE_URL=${DATABASE_URL} \
            zync:build rails db:setup

  build:
    parameters:
      postgresql_image:
        type: string
    working_directory: /opt/app-root/zync
    docker:
      # A Zync image tagged manually for CI tests
      - image: quay.io/3scale/zync:ci-builder
      - image: << parameters.postgresql_image >>
    environment:
        RAILS_ENV: test
        DISABLE_SPRING: 1 # we can't really run spring as it hangs on local circleci build
        DATABASE_URL: postgres://postgres:@localhost/circle_test
    steps:
      - checkout

      # Restore bundle cache
      - restore_cache:
          keys:
            - zync-bundle-v2-{{ .Environment.CACHE_VERSION }}-{{ arch }}-{{ checksum "Gemfile.lock" }}

      - run:
          name: bundle install
          command: |
            gem install bundler --version=$(grep -A 1 "BUNDLED WITH" Gemfile.lock | tr -d ' '| tail -n 1) --no-document
            bundle config --local force_ruby_platform true
            bundle config set --local deployment 'true'
            bundle config set --local path 'vendor/bundle'
            bundle install --jobs $(grep -c processor /proc/cpuinfo) --retry 3
      - run:
          name: boot zync
          command: BUNDLE_WITHOUT=development:test bundle exec bin/rails runner --environment=production 'puts Rails.env'

      - save_cache:
          key: zync-bundle-v2-{{ .Environment.CACHE_VERSION }}-{{ arch }}-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

      - run:
          name: Set up the DB
          command: bundle exec bin/rails db:wait db:setup

      - run:
          name: rails test
          command: |
            circleci tests glob "test/**/*_test.rb" | circleci tests run --command="xargs bundle exec rake test TESTOPTS='-v'" --verbose --split-by=timings
      - run:
          name: license_finder
          command: |
            bundle exec license_finder

      - store_test_results:
          path: test/reports

      - save_cache:
          key: zync-branch-v2-{{ arch }}-{{ .Branch }}
          paths:
            - vendor/bundle

workflows:
  version: 2.1
  build_and_test_docker:
    jobs:
      - build:
          matrix:
            parameters:
              postgresql_image: [ "cimg/postgres:10.22", "cimg/postgres:12.15", "cimg/postgres:13.11", "cimg/postgres:14.12" ]
      - docker-build
